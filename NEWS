micron -- history of user-visible changes. 2020-06-24
See the end of file for copying conditions.

Please send micron bug reports to <gray@gnu.org>

Version 0.7, 2020-06-24

* crontab: set proper ownership on created crontabs

* micrond

** ignore inotify events on backup and temporary files

** allow for user group crontabs owned by root


Version 0.6, 2020-06-05

* Unsetting environment variable in crontab

The construct

   NAME =

(with empty right-hand side) unsets the variable NAME.

* New built-in variable _JOB_MAILTO

This variable temporarily masks the MAILTO variable and disables
the two _SYSLOG_ variables for the next crontab entry.  Use it to
redirect output of a single crontab entry to a particular address.

* crontab -g -l

This command used without the filename argument lists names and
owners of all crontabs in the selected group.


Version 0.5, 2020-05-19

* Rename built-in variables.

Each variable has two variants.  The variable prefixed with _MICRON
affects all crontab entries that follow it, until redefined.  The
variable prefixed with _JOB affects only the crontab entry that
follows it (with eventual variable assignments in between).

* Fix a bug in crontab


Version 0.4, 2020-05-16

First release.

Version 0.3 (git)

Added documentation.

Version 0.2 (git)

Implemented user crongroups.

Version 0.1 (git)

Initial version.

=========================================================================
Copyright information:

Copyright (C) 2020 Sergey Poznyakoff

   Permission is granted to anyone to make or distribute verbatim copies
   of this document as received, in any medium, provided that the
   copyright notice and this permission notice are preserved,
   thus giving the recipient permission to redistribute in turn.

   Permission is granted to distribute modified versions
   of this document, or of portions of it,
   under the above conditions, provided also that they
   carry prominent notices stating who last changed them.

Local variables:
mode: outline
paragraph-separate: "[  ]*$"
eval: (add-hook 'write-file-hooks 'time-stamp)
time-stamp-start: "changes. "
time-stamp-format: "%:y-%02m-%02d"
time-stamp-end: "\n"
end:


